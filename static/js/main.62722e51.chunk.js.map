{"version":3,"sources":["reducers/session.js","reducers/errors.js","reducers/characters.js","reducers/search.js","reducers/spinner.js","reducers/index.js","api/index.js","sagas/actions.js","utils/maps.js","sagas/session.js","sagas/characters.js","sagas/index.js","store/index.js","components/PrivateRoute.js","components/ErrorAlert.js","components/Login.js","selectors/characters.js","components/Picture.js","components/Info.js","components/Profile.js","containers/SearchContainer.js","components/Home.js","components/Character.js","containers/CharacterContainer.js","components/Result.js","components/App.js","index.js"],"names":["sessionDuck","createDuck","UPDATE_SESSION","defineType","updateSession","createAction","createReducer","Object","defineProperty","state","action","objectSpread","payload","isAuthenticated","redirectToReferrer","errorsDuck","ADD_ERRORS","CLEAR_ERROR","addErrors","clearError","_errorsDuck$createRed","messages","concat","charactersDuck","SET_SELECTED","CLEAR_SELECTED","ADD_CHARACTERS","clearSelected","setSelectedCharacter","addCharacters","_charactersDuck$creat","selected","type","id","characters","hero","villain","searchDuck","SET_SEARCH_BY","ADD_SEARCH_RESULTS","setSearchBy","addSearchResults","_searchDuck$createRed","searchBy","name","results","spinnerDuck","ACTIVATE","DEACTIVATE","activateSpinner","deactivateSpinner","_spinnerDuck$createRe","default","combineReducers","errors","search","session","spinner","handleErrors","response","ok","prefix","constructUrl","accessToken","arguments","length","undefined","window","atob","sessionStorage","getItem","api","fetchCharacter","_ref","url","fetch","headers","Accept","Access-Control-Request-Method","then","json","searchCharacters","_ref2","actions","LOGIN_USER","SEARCH_CHARACTERS","errorMessageMap","access denied","invalid id","bad name search request","general","typeToAlignment","loginUserSaga","loginUser","rootSaga","error","regenerator_default","a","wrap","_context","prev","next","call","Api","sent","put","setItem","btoa","t0","stop","_marked","this","_context2","takeLatest","_marked2","_context3","all","_marked3","searchCharactersSaga","_action$payload","data","charById","_results","select","map","char","characters_marked","characters_marked2","characters_marked3","sagas","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","reducer","applyMiddleware","apply","values","forEach","saga","run","connect","Component","component","rest","objectWithoutProperties","react_default","createElement","Route","assign","render","props","Redirect","to","pathname","from","location","ErrorAlert","className","err","index","key","Login","onLoginClick","_this","_this$props","onTokenChange","e","setState","target","value","_this$props2","htmlFor","autoFocus","onChange","src_components_ErrorAlert","onClick","dispatch","getCharacterType","getCharacters","getSearchedName","createSelector","getSearchResultByName","getCharactersByType","allCharacters","searchResults","character","biography","alignment","push","getSelectedIdByType","selectedIds","getCharacterByType","Picture","alt","src","Info","keys","val","info","Profile","onClickHandler","image","powerstats","profileClass","classNames","profile--selected","components_Picture","components_Info","SearchContainer","onKeyPress","onSearchClick","onSearchChange","onCharacterSelect","getProfiles","_this$props3","selectedId","src_components_Profile","insertLine","profiles","placeholder","Home","onCompareClick","history","src_containers_SearchContainer","Character","appearance","getInfo","CharacterContainer","src_components_Character","Result","onBackToSearchClick","containers_CharacterContainer","App","isLoading","Switch","components_PrivateRoute","exact","path","withRouter","root","document","getElementById","ReactDOM","es","BrowserRouter","src_components_App"],"mappings":"wbAEMA,EAAcC,qBAAW,gBAMlBC,EAAiBF,EAAYG,WAAW,kBAExCC,EAAgBJ,EAAYK,aAAaH,GAEvCF,IAAYM,cAAZC,OAAAC,EAAA,EAAAD,CAAA,GACZL,EAAiB,SAACO,EAAOC,GAAR,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GAAyBE,EAAUC,EAAOE,WAVzC,CACnBC,iBAAiB,EACjBC,oBAAoB,ICHhBC,EAAad,qBAAW,eAKjBe,EAAaD,EAAWZ,WAAW,cACnCc,EAAcF,EAAWZ,WAAW,eAEpCe,EAAYH,EAAWV,aAAaW,GACpCG,EAAaJ,EAAWV,aAAaY,GAEnCF,IAAWT,eAAXc,EAAA,GAAAb,OAAAC,EAAA,EAAAD,CAAAa,EACZJ,EAAa,SAACP,EAAOC,GAAR,MAAoB,CAAEW,SAAUZ,EAAMY,SAASC,OAAOZ,EAAOE,YAD9DL,OAAAC,EAAA,EAAAD,CAAAa,EAEZH,EAAc,SAACR,GAAD,OAAAF,OAAAI,EAAA,EAAAJ,CAAA,GAAiBE,EAAjB,CAAwBY,SAAU,OAFpCD,GAVM,CACnBC,SAAU,KCFNE,EAAiBtB,qBAAW,mBASrBuB,EAAeD,EAAepB,WAAW,gBACzCsB,EAAiBF,EAAepB,WAAW,kBAC3CuB,EAAiBH,EAAepB,WAAW,kBAE3CwB,EAAgBJ,EAAelB,aAAaoB,GAC5CG,EAAuBL,EAAelB,aAAamB,GACnDK,EAAgBN,EAAelB,aAAaqB,GAE1CH,IAAejB,eAAfwB,EAAA,GAAAvB,OAAAC,EAAA,EAAAD,CAAAuB,EACZN,EAAe,SAACf,EAAOC,GAAR,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GACRE,EADQ,CACDsB,SAASxB,OAAAI,EAAA,EAAAJ,CAAA,GAAME,EAAMsB,SAAbxB,OAAAC,EAAA,EAAAD,CAAA,GAAwBG,EAAOE,QAAQoB,KAAOtB,EAAOE,QAAQqB,SAFvE1B,OAAAC,EAAA,EAAAD,CAAAuB,EAIZJ,EAAiB,SAACjB,EAAOC,GAAR,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GAAyBE,EAAzB,CAAgCyB,WAAW3B,OAAAI,EAAA,EAAAJ,CAAA,GAAME,EAAMyB,WAAexB,EAAOE,aAJlFL,OAAAC,EAAA,EAAAD,CAAAuB,EAKZL,EAAiB,SAAChB,EAAOC,GAAR,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GAAyBE,EAAzB,CAAgCsB,SAAU,CAAEI,KAAM,GAAIC,QAAS,QALpEN,GAhBM,CACnBI,WAAY,GACZH,SAAU,CACRI,KAAM,GACNC,QAAS,MCLPC,EAAapC,qBAAW,eASjBqC,EAAgBD,EAAWlC,WAAW,iBACtCoC,EAAqBF,EAAWlC,WAAW,sBAE3CqC,EAAcH,EAAWhC,aAAaiC,GACtCG,EAAmBJ,EAAWhC,aAAakC,GAEzCF,IAAW/B,eAAXoC,EAAA,GAAAnC,OAAAC,EAAA,EAAAD,CAAAmC,EACZJ,EAAgB,SAAC7B,EAAOC,GAAR,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GACTE,EADS,CACFkC,SAASpC,OAAAI,EAAA,EAAAJ,CAAA,GAAME,EAAMkC,SAAbpC,OAAAC,EAAA,EAAAD,CAAA,GAAwBG,EAAOE,QAAQoB,KAAOtB,EAAOE,QAAQgC,WAFvErC,OAAAC,EAAA,EAAAD,CAAAmC,EAIZH,EAAqB,SAAC9B,EAAOC,GAAR,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GACdE,EADc,CACPoC,QAAQtC,OAAAI,EAAA,EAAAJ,CAAA,GAAME,EAAMoC,QAAbtC,OAAAC,EAAA,EAAAD,CAAA,GAAuBG,EAAOE,QAAQgC,KAAOlC,EAAOE,QAAQiC,cALrEH,GAdM,CACnBG,QAAS,GACTF,SAAU,CACRR,KAAM,GACNC,QAAS,MCLPU,EAAc7C,qBAAW,gBAIlB8C,EAAWD,EAAY3C,WAAW,YAClC6C,EAAaF,EAAY3C,WAAW,cAEpC8C,EAAkBH,EAAYzC,aAAa0C,GAC3CG,EAAoBJ,EAAYzC,aAAa2C,GAE3CF,IAAYxC,eAAZ6C,EAAA,GAAA5C,OAAAC,EAAA,EAAAD,CAAA4C,EACZJ,EAAW,SAACtC,EAAOC,GAAR,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GAAyBE,EAAzBF,OAAAC,EAAA,EAAAD,CAAA,GAAiCG,EAAOE,SAAW,WAAY,MAD9DL,OAAAC,EAAA,EAAAD,CAAA4C,EAEZH,EAAa,SAACvC,EAAOC,GAAR,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GAAyBE,EAAzBF,OAAAC,EAAA,EAAAD,CAAA,GAAiCG,EAAOE,SAAW,WAAY,MAFhEuC,GARM,CAAEC,SAAS,ICGjBC,cACb,CACEnB,aACAoB,SACAC,SACAC,UACAC,oCCbEC,EAAe,SAACC,GACpB,IAAKA,EAASC,GACZ,MAAMD,EAER,OAAOA,GAMHE,EAAM,GAAAvC,OADK,uCACL,gCAGNwC,GAAe,eAACC,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADQG,OAAOC,KAAKD,OAAOE,eAAeC,QAAQ,gBAClD,SAAAhD,OAAuCuC,GAAvCvC,OAAgDyC,IAEtDQ,GAAA,CACbC,eADa,SAAAC,GACuB,IAAnBV,EAAmBU,EAAnBV,YAAa9B,EAAMwC,EAANxC,GACtByC,EAAMZ,GAAaC,GACzB,OAAOY,MAAK,GAAArD,OAAIoD,EAAJ,KAAApD,OAAWW,EAAX,KAAkB,CAC5B2C,QAAS,CACPC,OAAM,kDACNC,gCAAiC,SAGlCC,KAAKrB,GACLqB,KAAK,SAAApB,GAAc,OAAOA,EAASqB,UAExCC,iBAZa,SAAAC,GAYc,IAARtC,EAAQsC,EAARtC,KACjB,OAAO+B,MAAK,GAAArD,OAAIwC,KAAJ,YAAAxC,OAA6BsB,IACtCmC,KAAKrB,GACLqB,KAAK,SAAApB,GAAc,OAAOA,EAASqB,WC9B3BG,GAAA,CACbC,WAAY,aACZC,kBAAmB,qBCFRC,GAAkB,CAC7BC,gBAAiB,wBACjBC,aAAc,uBACdC,0BAA2B,0BAC3BC,QAAS,2CAGEC,GAAkB,CAC7BxD,KAAM,OACNC,QAAS,mBCDMwD,gBAkBAC,gBAIQC,IAtBlB,SAAUF,GAAclF,GAAxB,IAAAqD,EAAAU,EAAAd,EAAAoC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIyB,OAJzBF,EAAAC,KAAA,EAEKrC,EAAgBrD,EAAOE,QAAvBmD,YAFLoC,EAAAE,KAAA,EAI+BC,YAAKC,GAAI/B,eAAgB,CAAET,cAAa9B,GAAI,IAJ3E,UAAAwC,EAAA0B,EAAAK,KAIK7C,EAJLc,EAIKd,SAAUoC,EAJftB,EAIesB,MACD,UAAbpC,EALD,CAAAwC,EAAAE,KAAA,SAMD,OANCF,EAAAE,KAAA,GAMKI,YAAIrG,EAAc,CAAES,iBAAiB,KAN1C,QAOD,OAPCsF,EAAAE,KAAA,GAOKI,YAAIvF,EAAU,CAACoE,GAAgBS,MAPpC,QAAAI,EAAAE,KAAA,iBAUD,OADAlC,OAAOE,eAAeqC,QAAQ,cAAevC,OAAOwC,KAAK5C,IATxDoC,EAAAE,KAAA,GAUKI,YAAIrG,EAAc,CAAES,iBAAiB,EAAMC,oBAAoB,KAVpE,QAAAqF,EAAAE,KAAA,iBAaH,OAbGF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAAAA,EAAAE,KAAA,GAaGI,YAAIvF,EAAU,CAACoE,GAAgBI,WAblC,QAeL,OAfKS,EAAAE,KAAA,GAeCI,YAAIvD,KAfL,yBAAAiD,EAAAU,SAAAC,GAAAC,KAAA,UAkBA,SAAUlB,KAAV,OAAAG,EAAAC,EAAAC,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OACL,OADKW,EAAAX,KAAA,EACCY,YAAW9B,GAAQC,WAAYQ,IADhC,wBAAAoB,EAAAH,SAAAK,GAAAH,MAIQ,SAAUjB,KAAV,OAAAE,EAAAC,EAAAC,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OACb,OADac,EAAAd,KAAA,EACPe,YAAI,CACRvB,OAFW,wBAAAsB,EAAAN,SAAAQ,GAAAN,sBCrBEO,gBA2BArC,gBAIQa,IA/BlB,SAAUwB,GAAqB5G,GAA/B,IAAA6G,EAAA3E,EAAAZ,EAAAyC,EAAAS,EAAAvB,EAAAoC,EAAAyB,EAAAC,EAAAC,EAAA,OAAA1B,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGiB,OAHjBF,EAAAC,KAAA,EAAAmB,EAEoB7G,EAAOE,QAAtBgC,EAFL2E,EAEK3E,KAAMZ,EAFXuF,EAEWvF,KAFXmE,EAAAE,KAAA,EAGuBsB,YAAO,SAAAlH,GAAK,OAAIA,EAAM8C,SAH7C,UAAAkB,EAAA0B,EAAAK,MAAA/B,EAGK5B,QACID,GAJT,CAAAuD,EAAAE,KAAA,SAKD,OALCF,EAAAE,KAAA,EAKKI,YAAIjE,EAAY,CAAEI,OAAMZ,UAL7B,OAAAmE,EAAAE,KAAA,iBAO0C,OAP1CF,EAAAE,KAAA,GAOgDC,YAAKC,GAAItB,iBAAkB,CAAErC,SAP7E,WAAAsC,EAAAiB,EAAAK,KAOO7C,EAPPuB,EAOOvB,SAAUoC,EAPjBb,EAOiBa,MAAgByB,EAPjCtC,EAOwBrC,QACR,UAAbc,EARH,CAAAwC,EAAAE,KAAA,SASC,OATDF,EAAAE,KAAA,GASOI,YAAIvF,EAAU,CAACoE,GAAgBS,MATtC,QAAAI,EAAAE,KAAA,iBAWC,OAXDF,EAAAE,KAAA,GAWOI,YAAIjE,EAAY,CAAEI,OAAMZ,UAX/B,QAiBC,OALMyF,EAAW,GACX5E,EAAU2E,EAAKI,IAAI,SAAAC,GAEvB,OADAJ,EAASI,EAAK5F,IAAM4F,EACbA,EAAK5F,KAffkE,EAAAE,KAAA,GAiBOI,YAAI5E,EAAc4F,IAjBzB,QAkBC,OAlBDtB,EAAAE,KAAA,GAkBOI,YAAIhE,EAAiB,CAAEG,OAAMC,aAlBpC,QAAAsD,EAAAE,KAAA,iBAsBH,OAtBGF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAAAA,EAAAE,KAAA,GAsBGI,YAAIvF,EAAU,CAACoE,GAAgBI,WAtBlC,QAwBL,OAxBKS,EAAAE,KAAA,GAwBCI,YAAIvD,KAxBL,yBAAAiD,EAAAU,SAAAiB,GAAAf,KAAA,UA2BA,SAAU9B,KAAV,OAAAe,EAAAC,EAAAC,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OACL,OADKW,EAAAX,KAAA,EACCY,YAAW9B,GAAQE,kBAAmBiC,IADvC,wBAAAN,EAAAH,SAAAkB,GAAAhB,MAIQ,SAAUjB,KAAV,OAAAE,EAAAC,EAAAC,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OACb,OADac,EAAAd,KAAA,EACPe,YAAI,CACRnC,OAFW,wBAAAkC,EAAAN,SAAAmB,GAAAjB,MCrCA,IAAAkB,GAAA,CACb/F,cACAsB,YCEI0E,gBAAiBC,eACjBC,GAAc,CAACF,IASfG,GAAQC,YACZC,EACAC,IAAeC,WAAf,EAAmBL,KAGrB7H,OAAOmI,OAAOT,IAAOU,QAAQ,SAAAC,GAAI,OAAIV,GAAeW,IAAID,KAEzCP,oGCIAS,eAFS,SAAArI,GAAK,MAAK,CAAEI,gBAAiBJ,EAAM+C,QAAQ3C,kBAEpDiI,CAvBM,SAAArE,GAAA,IAAcsE,EAAdtE,EAAGuE,UAAsBnI,EAAzB4D,EAAyB5D,gBAAoBoI,EAA7C1I,OAAA2I,GAAA,EAAA3I,CAAAkE,EAAA,wCACnB0E,EAAAlD,EAAAmD,cAACC,GAAA,EAAD9I,OAAA+I,OAAA,GACML,EADN,CAEEM,OAAQ,SAAAC,GAAK,OACX3I,EAAmBsI,EAAAlD,EAAAmD,cAACL,EAAcS,GAChCL,EAAAlD,EAAAmD,cAACK,GAAA,EAAD,CACEC,GAAI,CACFC,SAAU,SACVlJ,MAAO,CAAEmJ,KAAMJ,EAAMK,mBCIlBC,UAbI,SAACN,GAAU,IACpBlG,EAAWkG,EAAXlG,OACR,OAAOA,GAAUA,EAAOW,OAAS,EAAKkF,EAAAlD,EAAAmD,cAAA,OAAKW,UAAU,eAClDzG,EAAOsE,IAAI,SAACoC,EAAKC,GAChB,OAAOd,EAAAlD,EAAAmD,cAAA,KAAGW,UAAU,QAAQG,IAAKD,GAAQD,MAEnC,OCANG,wNACJ1J,MAAQ,CACNsD,YAAa,MAGfqG,aAAe,WAAM,IACXrG,EAAgBsG,EAAK5J,MAArBsD,YADWuG,EAE2CD,EAAKb,MAA3D3D,EAFWyE,EAEXzE,UAAW3E,EAFAoJ,EAEApJ,UAAWC,EAFXmJ,EAEWnJ,WAAY8B,EAFvBqH,EAEuBrH,gBAC1C9B,IACK4C,GAAsC,IAAvBA,EAAYE,QAG9BhB,IACA4C,EAAU9B,IAHV7C,EAAU,CAAC,oCAOfqJ,cAAgB,SAAAC,IAEdrJ,EADuBkJ,EAAKb,MAApBrI,cAERkJ,EAAKI,SAAS,CAAE1G,YAAayG,EAAEE,OAAOC,mFAG/B,IAAAC,EACyC7D,KAAKyC,MAA7C1I,EADD8J,EACC9J,mBAAoBD,EADrB+J,EACqB/J,gBAE5B,OAAIC,GAAsBD,EACjBsI,EAAAlD,EAAAmD,cAACK,GAAA,EAAD,CAAUC,GAAG,MAIpBP,EAAAlD,EAAAmD,cAAA,OAAKW,UAAU,SACbZ,EAAAlD,EAAAmD,cAAA,OAAKW,UAAU,SAAf,iBACAZ,EAAAlD,EAAAmD,cAAA,YAAUW,UAAU,eAClBZ,EAAAlD,EAAAmD,cAAA,SAAOW,UAAU,cAAcc,QAAQ,SAAvC,eACA1B,EAAAlD,EAAAmD,cAAA,SACE0B,WAAS,EACT7I,GAAG,QACHD,KAAK,WACL+H,UAAU,cACVY,MAAO5D,KAAKtG,MAAMsD,YAClBgH,SAAUhE,KAAKwD,iBAGnBpB,EAAAlD,EAAAmD,cAAC4B,GAAD,CAAY1H,OAAQyD,KAAKyC,MAAMlG,SAC/B6F,EAAAlD,EAAAmD,cAAA,OAAKW,UAAU,aACbZ,EAAAlD,EAAAmD,cAAA,UAAQW,UAAU,eAAekB,QAASlE,KAAKqD,cAA/C,kBA9CUrB,cA4ELD,eAbS,SAAArI,GAAK,MAAK,CAChC6C,OAAQ7C,EAAM6C,OAAOjC,SACrBP,mBAAoBL,EAAM+C,QAAQ1C,mBAClCD,gBAAiBJ,EAAM+C,QAAQ3C,kBAGN,SAAAqK,GAAQ,MAAK,CACtCjI,gBAAiB,kBAAMiI,EAASjI,MAChC/B,UAAW,SAACoC,GAAD,OAAY4H,EAAShK,EAAUoC,KAC1CnC,WAAY,kBAAM+J,EAAS/J,MAC3B0E,UAAW,SAAC9B,GAAD,OAAiBmH,EAAS,CAAElJ,KAAMmD,GAAQC,WAAYxE,QAAS,CAAEmD,oBAG/D+E,CAA6CqB,aCnFtDgB,GAAmB,SAAC1K,EAAO+I,GAAR,OAAkBA,EAAMxH,MAC3CoJ,GAAgB,SAAA3K,GAAK,OAAIA,EAAMyB,WAAWA,YAKnCmJ,GAAkBC,aAC7B,CAACH,GAHmB,SAAA1K,GAAK,OAAIA,EAAM8C,OAAOZ,WAI1C,SAACX,EAAMwF,GACL,OAAOA,EAAKxF,KAIHuJ,GAAwBD,aACnC,CAACD,GAXsB,SAAA5K,GAAK,OAAIA,EAAM8C,OAAOV,UAY7C,SAACD,EAAMC,GACL,OAAOD,EAAOC,EAAQD,GAAQ,KAIrB4I,GAAsBF,aACjC,CAACH,GAAkBC,GAAeG,IAClC,SAACvJ,EAAMyJ,EAAeC,GACpB,IAAMxJ,EAAa,GAOnB,OANIwJ,GAAiBA,EAAczH,OAAS,GAC1CyH,EAAc/C,QAAQ,SAAA1G,GACpB,IAAM0J,EAAYF,EAAcxJ,GAC5B0J,GAAaA,EAAUC,UAAUC,YAAclG,GAAgB3D,IAAOE,EAAW4J,KAAKH,KAGvFzJ,IAIE6J,GAAsBT,aACjC,CAACH,GAjCoB,SAAA1K,GAAK,OAAIA,EAAMyB,WAAWH,WAkC/C,SAACC,EAAMgK,GAAP,OAAuBA,EAAYhK,KAGxBiK,GAAqBX,aAChC,CAACS,GAAqBX,IACtB,SAACnJ,EAAIwJ,GACH,OAAOA,EAAcxJ,yBC5BViK,GAdC,SAAC1C,GAAU,IACjB9E,EAAmB8E,EAAnB9E,IAAKqF,EAAcP,EAAdO,UACb,OACEZ,EAAAlD,EAAAmD,cAAA,OAAKW,UAAWA,GACdZ,EAAAlD,EAAAmD,cAAA,OAAK+C,IAAI,YAAYC,IAAK1H,MCcjB2H,GAhBF,SAAC7C,GAAU,IACdhC,EAAoBgC,EAApBhC,KAAMuC,EAAcP,EAAdO,UACd,OACExJ,OAAO+L,KAAK9E,GAAMI,IAAI,SAAAsC,GACpB,IANcqC,EAMRC,EANwB,UAAhBD,EAMgC,kBAAd/E,EAAK0C,GACnC1C,EAAK0C,GAAO1C,EAAK0C,GAAK,KAPwB,MAARqC,GAAgBA,EAAcA,EAAP,KAQ/D,OAAOpD,EAAAlD,EAAAmD,cAAA,KAAGW,UAAWA,EAAWG,IAAKA,GAAMA,EAApC,KAA2CsC,MCiBzCC,UArBC,SAACjD,GAAU,IACjBhC,EAAmCgC,EAAnChC,KAAMkF,EAA6BlD,EAA7BkD,eAAgB3K,EAAayH,EAAbzH,SACtBa,EAA4B4E,EAA5B5E,KAAM+J,EAAsBnF,EAAtBmF,MAAOC,EAAepF,EAAfoF,WACfC,EAAeC,KAAW,UAAW,CAAEC,oBAAqBhL,IAClE,OACEoH,EAAAlD,EAAAmD,cAAA,OAAKW,UAAW8C,EAAc5B,QAASyB,GACrCvD,EAAAlD,EAAAmD,cAAC4D,GAAD,CAASjD,UAAU,kBAAkBrF,IAAKiI,EAAMjI,MAChDyE,EAAAlD,EAAAmD,cAAA,KAAGW,UAAU,QAAQnH,GACrBuG,EAAAlD,EAAAmD,cAAA,OAAKW,UAAU,gBACZ6C,GAAczD,EAAAlD,EAAAmD,cAAC6D,GAAD,CAAMzF,KAAMoF,EAAY7C,UAAW,sBCLpDmD,wNACJzM,MAAQ,CACNmC,KAAM,MAGRuK,WAAa,SAAC3C,GACE,UAAVA,EAAEN,KACJG,EAAK+C,mBAITC,eAAiB,SAAC7C,GAChBH,EAAKI,SAAS,CAAE7H,KAAM4H,EAAEE,OAAOC,WAGjCyC,cAAgB,WAAM,IACZxK,EAASyH,EAAK5J,MAAdmC,KADY0H,EAEuDD,EAAKb,MAAxEvE,EAFYqF,EAEZrF,iBAAkBjD,EAFNsI,EAEMtI,KAAMiB,EAFZqH,EAEYrH,gBAAiB/B,EAF7BoJ,EAE6BpJ,WACjDC,EAHoBmJ,EAEwCnJ,cAExC,IAAhByB,EAAKqB,OACP/C,EAAU,CAAC,sBAEX+B,IACAgC,EAAiB,CAAErC,OAAMZ,aAI7BsL,kBAAoB,SAAArL,GAAE,OAAI,WAAM,IAAA2I,EACSP,EAAKb,MAApCxH,EADsB4I,EACtB5I,MACRJ,EAF8BgJ,EAChBhJ,sBACO,CAAEI,OAAMC,WAG/BsL,YAAc,WAAM,IAAAC,EACiCnD,EAAKb,MAAhDtH,EADUsL,EACVtL,WAAYS,EADF6K,EACE7K,SAAUX,EADZwL,EACYxL,KAAMyL,EADlBD,EACkBC,WACpC,GAAI9K,EAASX,GAAO,CAIlB,OAAOE,GAAcA,EAAW+B,OAAS,EAAI/B,EAAW0F,IAAI,SAAC+D,EAAW1B,GAAU,IACxEhI,EAAO0J,EAAP1J,GACR,OACEkH,EAAAlD,EAAAmD,cAAA,OAAKc,IAAKjI,GACRkH,EAAAlD,EAAAmD,cAACsE,GAAD,CACElG,KAAMmE,EACNe,eAAgBrC,EAAKiD,kBAAkBrL,GACvCF,SAAU0L,IAAexL,IAVd,SAACgI,GAClB,OAAO/H,EAAW+B,OAAS,GAAKgG,IAAU/H,EAAW+B,OAAS,EAWzD0J,CAAW1D,IAAUd,EAAAlD,EAAAmD,cAAA,cAGvBD,EAAAlD,EAAAmD,cAAA,WAAKD,EAAAlD,EAAAmD,cAAA,gHAKZ,IAAMwE,EAAW7G,KAAKwG,cACtB,OACEpE,EAAAlD,EAAAmD,cAAA,OAAKW,UAAS,UAAAzI,OAAYyF,KAAKyC,MAAMxH,MAAQC,GAAG,UAC9CkH,EAAAlD,EAAAmD,cAAA,OAAKW,UAAU,SAAShD,KAAKyC,MAAMxH,MACnCmH,EAAAlD,EAAAmD,cAAA,SACEyE,YAAY,2BACZ9C,SAAUhE,KAAKsG,eACfF,WAAYpG,KAAKoG,WACjBxC,MAAO5D,KAAKtG,MAAMmC,MAAQ,GAC1BmH,UAAU,iBAEZZ,EAAAlD,EAAAmD,cAAA,UAAQ6B,QAASlE,KAAKqG,eAAtB,UACAjE,EAAAlD,EAAAmD,cAAA,OAAKW,UAAU,gBACZ6D,WApEmB7E,cAoGfD,eAdS,SAACrI,EAAO+I,GAAR,MAAmB,CACzCtH,WAAYsJ,GAAoB/K,EAAO+I,GACvC7G,SAAUlC,EAAM8C,OAAOZ,SACvB8K,WAAY1B,GAAoBtL,EAAO+I,KAGd,SAAA0B,GAAQ,MAAK,CACtCjI,gBAAiB,kBAAMiI,EAASjI,MAChC/B,UAAW,SAACoC,GAAD,OAAY4H,EAAShK,EAAUoC,KAC1CnC,WAAY,kBAAM+J,EAAS/J,MAC3B8D,iBAAkB,SAACuC,GAAD,OAAU0D,EAAS,CAAElJ,KAAMmD,GAAQE,kBAAmBzE,QAAS4G,KACjF5F,qBAAsB,SAACK,GAAD,OAAQiJ,EAAStJ,EAAqBK,OAG/C6G,CAA6CoE,ICvGtDY,wNACJC,eAAiB,WAAM,IAAAzD,EACgCD,EAAKb,MAAlDwE,EADa1D,EACb0D,QAASjM,EADIuI,EACJvI,SAAUb,EADNoJ,EACMpJ,WAC3BC,EAFqBmJ,EACiBnJ,cAElCY,EAASI,MAAQJ,EAASK,QAC5B4L,EAAQlC,KAAK,YAEb5K,EAAU,CAAC,sHAKb,OACEiI,EAAAlD,EAAAmD,cAAA,OAAKW,UAAU,QACbZ,EAAAlD,EAAAmD,cAAC6E,GAAD,CAAiBjM,KAAK,SACtBmH,EAAAlD,EAAAmD,cAAC6E,GAAD,CAAiBjM,KAAK,YACtBmH,EAAAlD,EAAAmD,cAAC4B,GAAD,CAAY1H,OAAQyD,KAAKyC,MAAMlG,SAC/B6F,EAAAlD,EAAAmD,cAAA,UAAQW,UAAU,iBAAiBkB,QAASlE,KAAKgH,gBAAjD,mBAjBWhF,cAwCJD,eAVS,SAACrI,GAAD,MAAY,CAClC6C,OAAQ7C,EAAM6C,OAAOjC,SACrBU,SAAUtB,EAAMyB,WAAWH,WAGF,SAAAmJ,GAAQ,MAAK,CACtChK,UAAW,SAACoC,GAAD,OAAY4H,EAAShK,EAAUoC,KAC1CnC,WAAY,kBAAM+J,EAAS/J,QAGd2H,CAA6CgF,ICd7CI,UA5BG,SAAC1E,GAAU,IACnBhC,EAASgC,EAAThC,KACA5E,EAAmD4E,EAAnD5E,KAAM+J,EAA6CnF,EAA7CmF,MAAOC,EAAsCpF,EAAtCoF,WAAYhB,EAA0BpE,EAA1BoE,UAAWuC,EAAe3G,EAAf2G,WAU5C,OACEhF,EAAAlD,EAAAmD,cAAA,OAAKW,UAAU,aACbZ,EAAAlD,EAAAmD,cAAC4D,GAAD,CAASjD,UAAU,oBAAoBrF,IAAKiI,EAAMjI,MAClDyE,EAAAlD,EAAAmD,cAAA,OAAKW,UAAU,qBACbZ,EAAAlD,EAAAmD,cAAA,kBAAUxG,GACVuG,EAAAlD,EAAAmD,cAAA,uBAAewC,EAAU,cAdf,WACd,IAAMY,EAAO,GAMb,MALA,CAACI,EAAYuB,GAAYxF,QAAQ,SAACnB,EAAMyC,GAClCzC,GACFgF,EAAKV,KAAK3C,EAAAlD,EAAAmD,cAAC6D,GAAD,CAAM/C,IAAKD,EAAOzC,KAAM2G,EAAYpE,UAAW,sBAGtDyC,EAQF4B,OClBHC,yLACK,IACC1C,EAAc5E,KAAKyC,MAAnBmC,UACR,OAAOA,EACLxC,EAAAlD,EAAAmD,cAAA,OAAKW,UAAS,aAAAzI,OAAeyF,KAAKyC,MAAMxH,OACtCmH,EAAAlD,EAAAmD,cAACkF,GAAD,CAAW9G,KAAMmE,KAEjB,YAPyB5C,aAmBlBD,eAJS,SAACrI,EAAO+I,GAAR,MAAmB,CACzCmC,UAAWM,GAAmBxL,EAAO+I,KAGxBV,CAAyBuF,ICjBlCE,wNACJC,oBAAsB,WAAM,IAAAlE,EACSD,EAAKb,MAAhCwE,EADkB1D,EAClB0D,SACRrM,EAF0B2I,EACT3I,iBAEjBqM,EAAQlC,KAAK,gFAIb,OACE3C,EAAAlD,EAAAmD,cAAA,OAAKW,UAAU,UACbZ,EAAAlD,EAAAmD,cAAA,OAAKW,UAAU,SAAf,UACAZ,EAAAlD,EAAAmD,cAACqF,GAAD,CAAoBzM,KAAK,SACzBmH,EAAAlD,EAAAmD,cAACqF,GAAD,CAAoBzM,KAAK,YACzBmH,EAAAlD,EAAAmD,cAAA,UAAQ6B,QAASlE,KAAKyH,qBAAtB,0BAbazF,cAqCND,eAVS,SAACrI,GAAD,MAAY,CAClC6C,OAAQ7C,EAAM6C,OAAOjC,SACrBU,SAAUtB,EAAMyB,WAAWH,WAGF,SAAAmJ,GAAQ,MAAK,CACtChK,UAAW,SAACoC,GAAD,OAAY4H,EAAShK,EAAUoC,KAC1C3B,cAAe,kBAAMuJ,EAASvJ,QAGjBmH,CAA6CyF,IClCtDG,gMACK,IACCC,EAAc5H,KAAKyC,MAAnBmF,UACR,OACExF,EAAAlD,EAAAmD,cAAA,OAAKW,UAAU,OACX4E,GAAaxF,EAAAlD,EAAAmD,cAAA,OAAKW,UAAU,WAAUZ,EAAAlD,EAAAmD,cAAA,OAAKW,UAAU,aACvDZ,EAAAlD,EAAAmD,cAACwF,GAAA,EAAD,KACEzF,EAAAlD,EAAAmD,cAACyF,GAAD,CAAcC,OAAK,EAACC,KAAK,IAAI/F,UAAW8E,KACxC3E,EAAAlD,EAAAmD,cAACyF,GAAD,CAAcE,KAAK,WAAW/F,UAAWuF,KACzCpF,EAAAlD,EAAAmD,cAACC,GAAA,EAAD,CAAO0F,KAAK,SAAS/F,UAAWmB,KAChChB,EAAAlD,EAAAmD,cAACK,GAAA,EAAD,CAAUsF,KAAK,IAAIrF,GAAG,eAVdX,cAqBHiG,gBAAWlG,YAAQ,SAAArI,GAAK,MAAK,CAAEkO,UAAWlO,EAAMgD,QAAQL,UAA7C0F,CAAyD4F,KCvB7EO,gBAAOC,SAASC,eAAe,SAErCC,IAAS7F,OACPJ,EAAAlD,EAAAmD,cAACiG,EAAA,EAAD,CAAUhH,MAAOA,IACfc,EAAAlD,EAAAmD,cAACkG,EAAA,EAAD,KACEnG,EAAAlD,EAAAmD,cAACmG,GAAD,QAESN","file":"static/js/main.62722e51.chunk.js","sourcesContent":["import { createDuck } from 'redux-duck';\n\nconst sessionDuck = createDuck('session-duck');\nconst initialState = {\n  isAuthenticated: false,\n  redirectToReferrer: false,\n};\n\nexport const UPDATE_SESSION = sessionDuck.defineType('UPDATE_SESSION');\n\nexport const updateSession = sessionDuck.createAction(UPDATE_SESSION);\n\nexport default sessionDuck.createReducer({\n  [UPDATE_SESSION]: (state, action) => ({ ...state, ...action.payload })\n}, initialState);\n","import { createDuck } from 'redux-duck';\n\nconst errorsDuck = createDuck('errors-duck');\nconst initialState = {\n  messages: [],\n};\n\nexport const ADD_ERRORS = errorsDuck.defineType('ADD_ERRORS');\nexport const CLEAR_ERROR = errorsDuck.defineType('CLEAR_ERROR');\n\nexport const addErrors = errorsDuck.createAction(ADD_ERRORS);\nexport const clearError = errorsDuck.createAction(CLEAR_ERROR);\n\nexport default errorsDuck.createReducer({\n  [ADD_ERRORS]: (state, action) => ({ messages: state.messages.concat(action.payload) }),\n  [CLEAR_ERROR]: (state) => ({ ...state, messages: [] }),\n}, initialState);\n","import { createDuck } from 'redux-duck';\n\nconst charactersDuck = createDuck('characters-duck');\nconst initialState = {\n  characters: {},\n  selected: {\n    hero: '',\n    villain: ''\n  },\n};\n\nexport const SET_SELECTED = charactersDuck.defineType('SET_SELECTED');\nexport const CLEAR_SELECTED = charactersDuck.defineType('CLEAR_SELECTED');\nexport const ADD_CHARACTERS = charactersDuck.defineType('ADD_CHARACTERS');\n\nexport const clearSelected = charactersDuck.createAction(CLEAR_SELECTED);\nexport const setSelectedCharacter = charactersDuck.createAction(SET_SELECTED);\nexport const addCharacters = charactersDuck.createAction(ADD_CHARACTERS);\n\nexport default charactersDuck.createReducer({\n  [SET_SELECTED]: (state, action) =>\n    ({ ...state, selected: { ...state.selected, [action.payload.type]: action.payload.id } })\n  ,\n  [ADD_CHARACTERS]: (state, action) => ({ ...state, characters: { ...state.characters, ...action.payload } }),\n  [CLEAR_SELECTED]: (state, action) => ({ ...state, selected: { hero: '', villain: '' } }),\n}, initialState);\n","import { createDuck } from 'redux-duck';\n\nconst searchDuck = createDuck('search-duck');\nconst initialState = {\n  results: {},\n  searchBy: {\n    hero: '',\n    villain: ''\n  },\n};\n\nexport const SET_SEARCH_BY = searchDuck.defineType('SET_SEARCH_BY');\nexport const ADD_SEARCH_RESULTS = searchDuck.defineType('ADD_SEARCH_RESULTS');\n\nexport const setSearchBy = searchDuck.createAction(SET_SEARCH_BY);\nexport const addSearchResults = searchDuck.createAction(ADD_SEARCH_RESULTS);\n\nexport default searchDuck.createReducer({\n  [SET_SEARCH_BY]: (state, action) =>\n    ({ ...state, searchBy: { ...state.searchBy, [action.payload.type]: action.payload.name } })\n  ,\n  [ADD_SEARCH_RESULTS]: (state, action) =>\n    ({ ...state, results: { ...state.results, [action.payload.name]: action.payload.results } })\n}, initialState);\n","import { createDuck } from 'redux-duck';\n\nconst spinnerDuck = createDuck('spinner-duck');\n\nconst initialState = { default: false };\n\nexport const ACTIVATE = spinnerDuck.defineType('ACTIVATE');\nexport const DEACTIVATE = spinnerDuck.defineType('DEACTIVATE');\n\nexport const activateSpinner = spinnerDuck.createAction(ACTIVATE);\nexport const deactivateSpinner = spinnerDuck.createAction(DEACTIVATE);\n\nexport default spinnerDuck.createReducer({\n  [ACTIVATE]: (state, action) => ({ ...state, [action.payload || 'default']: true }),\n  [DEACTIVATE]: (state, action) => ({ ...state, [action.payload || 'default']: false }),\n}, initialState);\n","import { combineReducers } from 'redux';\nimport session from './session';\nimport errors from './errors';\nimport characters from './characters';\nimport search from './search';\nimport spinner from './spinner';\n\nexport default combineReducers(\n  {\n    characters,\n    errors,\n    search,\n    session,\n    spinner,\n  }\n);\n","const handleErrors = (response) => {\n  if (!response.ok) {\n    throw response;\n  }\n  return response;\n};\n\n// Need proxy url to bypass \"No Access-Control-Allow-Origin header” error\n// when making request to api from the browser\nconst proxyUrl = 'https://cors-anywhere.herokuapp.com/';\nconst prefix = `${proxyUrl}http://superheroapi.com/api/`;\n\nconst getAccessToken = () => window.atob(window.sessionStorage.getItem('accessToken'));\nconst constructUrl = (accessToken = getAccessToken()) => `${prefix}${accessToken}`;\n\nexport default {\n  fetchCharacter({ accessToken, id }) {\n    const url = constructUrl(accessToken);\n    return fetch(`${url}/${id}/`, {\n      headers: {\n        Accept: `text/html,application/xhtml+xml,application/xml`,\n        'Access-Control-Request-Method': 'GET'\n      }\n    })\n      .then(handleErrors)\n      .then(response => { return response.json() })\n  },\n  searchCharacters({ name }) {\n    return fetch(`${constructUrl()}/search/${name}`)\n      .then(handleErrors)\n      .then(response => { return response.json() })\n  }\n};","export default {\n  LOGIN_USER: 'LOGIN_USER',\n  SEARCH_CHARACTERS: 'SEARCH_CHARACTERS'\n};","export const errorMessageMap = {\n  'access denied': 'Invalid access token.',\n  'invalid id': 'Invalid id supplied.',\n  'bad name search request': 'Invalid search request.',\n  general: 'Something went wrong. Please try again.',\n};\n\nexport const typeToAlignment = {\n  hero: 'good',\n  villain: 'bad'\n};\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport Api from '../api';\nimport actions from './actions';\nimport { updateSession } from '../reducers/session';\nimport { addErrors } from '../reducers/errors';\nimport { errorMessageMap } from '../utils/maps';\nimport { deactivateSpinner } from '../reducers/spinner';\n\nexport function* loginUserSaga(action) {\n  try {\n    const { accessToken } = action.payload;\n    // Since there isn't auth endpoint, try to fetch a character and see if we get authentication error\n    const { response, error } = yield call(Api.fetchCharacter, { accessToken, id: 1 });\n    if (response === 'error') {\n      yield put(updateSession({ isAuthenticated: false }));\n      yield put(addErrors([errorMessageMap[error]]));\n    } else {\n      window.sessionStorage.setItem('accessToken', window.btoa(accessToken));\n      yield put(updateSession({ isAuthenticated: true, redirectToReferrer: true }));\n    }\n  } catch(e) {\n    yield put(addErrors([errorMessageMap.general]));\n  }\n  yield put(deactivateSpinner());\n}\n\nexport function* loginUser() {\n  yield takeLatest(actions.LOGIN_USER, loginUserSaga);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    loginUser(),\n  ])\n}","import { all, call, put, takeLatest, select } from 'redux-saga/effects'\nimport Api from '../api';\nimport actions from './actions';\nimport { addErrors } from '../reducers/errors';\nimport { setSearchBy, addSearchResults } from '../reducers/search';\nimport { addCharacters } from '../reducers/characters';\nimport { errorMessageMap } from '../utils/maps';\nimport { deactivateSpinner } from '../reducers/spinner';\n\nexport function* searchCharactersSaga(action) {\n  try {\n    const { name, type } = action.payload;\n    const { results } = yield select(state => state.search);\n    if (results[name]) {\n      yield put(setSearchBy({ name, type }));\n    } else {\n      const { response, error, results: data } = yield call(Api.searchCharacters, { name });\n      if (response === 'error') {\n        yield put(addErrors([errorMessageMap[error]]));\n      } else {\n        yield put(setSearchBy({ name, type }));\n        const charById = {};\n        const results = data.map(char => {\n          charById[char.id] = char;\n          return char.id\n        });\n        yield put(addCharacters(charById));\n        yield put(addSearchResults({ name, results }));\n      }\n    }\n  } catch(e) {\n    yield put(addErrors([errorMessageMap.general]));\n  }\n  yield put(deactivateSpinner());\n}\n\nexport function* searchCharacters() {\n  yield takeLatest(actions.SEARCH_CHARACTERS, searchCharactersSaga);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    searchCharacters(),\n  ])\n}","import session from './session';\nimport characters from './characters';\n\nexport default {\n  characters,\n  session\n};\n","import { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport reducer from '../reducers'\nimport sagas from '../sagas'\nimport { createLogger } from 'redux-logger';\nimport freeze from 'redux-freeze';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  const logger = createLogger({ collapsed: true }); \n\n  middlewares.push(logger);\n  middlewares.push(freeze);\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middlewares)\n);\n\nObject.values(sagas).forEach(saga => sagaMiddleware.run(saga));\n\nexport default store;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated ? (<Component {...props} />) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: props.location }\n          }}\n        />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  component: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({ isAuthenticated: state.session.isAuthenticated });\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/components/ErrorAlert.css';\n\nconst ErrorAlert = (props) => {\n  const { errors } = props;\n  return errors && errors.length > 0 ? (<div className='error-alert'>\n    {errors.map((err, index) => {\n      return <p className='error' key={index}>{err}</p>\n    })}\n  </div>) : null;\n};\n\nErrorAlert.propTypes = {\n  errors: PropTypes.array\n};\n\nexport default ErrorAlert;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport actions from '../sagas/actions';\nimport { addErrors, clearError } from '../reducers/errors';\nimport { activateSpinner } from '../reducers/spinner';\nimport ErrorAlert from './ErrorAlert';\nimport '../styles/components/Login.css';\n\nclass Login extends Component {\n  state = {\n    accessToken: '',\n  };\n  \n  onLoginClick = () => {\n    const { accessToken } = this.state;\n    const { loginUser, addErrors, clearError, activateSpinner } = this.props;\n    clearError();\n    if (!accessToken || accessToken.length === 0) {\n      addErrors(['Access token field is empty.']);\n    } else {\n      activateSpinner();\n      loginUser(accessToken);\n    }\n  }\n\n  onTokenChange = e => {\n    const { clearError } = this.props;\n    clearError();\n    this.setState({ accessToken: e.target.value });\n  }\n  \n  render() {\n    const { redirectToReferrer, isAuthenticated } = this.props;\n\n    if (redirectToReferrer && isAuthenticated) {\n      return <Redirect to='/' />\n    }\n\n    return (\n      <div className='login'>\n        <div className='title'>Welcome Cadet</div>\n        <fieldset className='login-field'>\n          <label className='login-label' htmlFor='field'>Acess Token</label>\n          <input\n            autoFocus\n            id='token'\n            type='password'\n            className='token-input'\n            value={this.state.accessToken}\n            onChange={this.onTokenChange}\n          />\n        </fieldset>\n        <ErrorAlert errors={this.props.errors}/>\n        <div className='container'>\n          <button className='login-button' onClick={this.onLoginClick}>Login</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nLogin.propTypes = {\n  errors: PropTypes.array,\n  redirectToReferrer: PropTypes.bool,\n  isAuthenticated: PropTypes.bool,\n  activateSpinner: PropTypes.func,\n  addErrors: PropTypes.func,\n  clearError: PropTypes.func,\n  loginUser: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors.messages,\n  redirectToReferrer: state.session.redirectToReferrer,\n  isAuthenticated: state.session.isAuthenticated,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  activateSpinner: () => dispatch(activateSpinner()),\n  addErrors: (errors) => dispatch(addErrors(errors)),\n  clearError: () => dispatch(clearError()),\n  loginUser: (accessToken) => dispatch({ type: actions.LOGIN_USER, payload: { accessToken } }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import { createSelector } from 'reselect';\nimport { typeToAlignment } from '../utils/maps';\n\nconst getCharacterType = (state, props) => props.type;\nconst getCharacters = state => state.characters.characters;\nconst getSelectedIds = state => state.characters.selected;\nconst getSearchResults = state => state.search.results;\nconst getSearchData = state => state.search.searchBy;\n\nexport const getSearchedName = createSelector(\n  [getCharacterType, getSearchData],\n  (type, data) => {\n    return data[type];\n  }\n);\n\nexport const getSearchResultByName = createSelector(\n  [getSearchedName, getSearchResults],\n  (name, results) => {\n    return name ? results[name] : [];\n  }\n);\n\nexport const getCharactersByType = createSelector(\n  [getCharacterType, getCharacters, getSearchResultByName],\n  (type, allCharacters, searchResults) => {\n    const characters = [];\n    if (searchResults && searchResults.length > 0) {\n      searchResults.forEach(id => {\n        const character = allCharacters[id];\n        if (character && character.biography.alignment === typeToAlignment[type]) characters.push(character);\n      })\n    }\n    return characters;\n  }\n);\n\nexport const getSelectedIdByType = createSelector(\n  [getCharacterType, getSelectedIds],\n  (type, selectedIds) => selectedIds[type]\n);\n\nexport const getCharacterByType = createSelector(\n  [getSelectedIdByType, getCharacters],\n  (id, allCharacters) => {\n    return allCharacters[id];\n  }\n);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Picture = (props) => {\n  const { url, className } = props;\n  return (\n    <div className={className}>\n      <img alt='character' src={url} />\n    </div>\n  )\n};\n\nPicture.propTypes = {\n  url: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default Picture","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst formatValue = val => (val === 'null' || val === '-' || !val) ? '--' : val;\n\nconst Info = (props) => {\n  const { data, className } = props;\n  return (\n    Object.keys(data).map(key => {\n      const info = formatValue(typeof data[key] === 'string' ?\n        data[key] : data[key][0]);\n      return <p className={className} key={key}>{key}: {info}</p>\n    })\n  )\n};\n\nInfo.propTypes = {\n  data: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default Info","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Picture from './Picture';\nimport Info from './Info';\nimport '../styles/components/Profile.css';\n\nconst Profile = (props) => {\n  const { data, onClickHandler, selected } = props;\n  const { name, image, powerstats } = data;\n  const profileClass = classNames('profile', { 'profile--selected': selected });\n  return (\n    <div className={profileClass} onClick={onClickHandler}>\n      <Picture className='profile-picture' url={image.url} />\n      <p className='name'>{name}</p>\n      <div className='profile-info'>\n        {powerstats && <Info data={powerstats} className={'profile-stats'} />}\n      </div>\n    </div>\n  )\n};\n\nProfile.propTypes = {\n  data: PropTypes.object,\n  selected: PropTypes.bool,\n  onClickHandler: PropTypes.func.isRequired,\n};\n\nexport default Profile","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport actions from '../sagas/actions';\nimport { addErrors, clearError } from '../reducers/errors';\nimport { activateSpinner } from '../reducers/spinner';\nimport { setSelectedCharacter } from '../reducers/characters';\nimport { getCharactersByType, getSelectedIdByType } from '../selectors/characters';\nimport Profile from '../components/Profile';\nimport '../styles/containers/SearchContainer.css';\n\nclass SearchContainer extends Component {\n  state = {\n    name: '',\n  }\n\n  onKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      this.onSearchClick();\n    }\n  }\n\n  onSearchChange = (e) => {\n    this.setState({ name: e.target.value });\n  }\n\n  onSearchClick = () => {\n    const { name } = this.state;\n    const { searchCharacters, type, activateSpinner, addErrors, clearError } = this.props;\n    clearError();\n    if (name.length === 0) {\n      addErrors(['Name is missing.'])\n    } else {\n      activateSpinner();\n      searchCharacters({ name, type });\n    }\n  }\n\n  onCharacterSelect = id => () => {\n    const { type, setSelectedCharacter } = this.props;\n    setSelectedCharacter({ type, id });\n  }\n\n  getProfiles = () => {\n    const { characters, searchBy, type, selectedId } = this.props;\n    if (searchBy[type]) {\n      const insertLine = (index) => {\n        return characters.length > 1 && index !== characters.length - 1;\n      };\n      return characters && characters.length > 0 ? characters.map((character, index) => {\n        const { id } = character;\n        return (\n          <div key={id}>\n            <Profile\n              data={character}\n              onClickHandler={this.onCharacterSelect(id)}\n              selected={selectedId === id}\n            />\n            {insertLine(index) && <hr />}\n          </div>\n        )\n      }) : <div><p>No character was found</p></div>;\n    }\n  }\n\n  render() {\n    const profiles = this.getProfiles();\n    return (\n      <div className={`search-${this.props.type}`} id='search'>\n        <div className='title'>{this.props.type}</div>\n        <input\n          placeholder='Type a name to search by'\n          onChange={this.onSearchChange}\n          onKeyPress={this.onKeyPress}\n          value={this.state.name || ''}\n          className='search-input'\n        />\n        <button onClick={this.onSearchClick}>SEARCH</button>\n        <div className='profile-list'>\n          {profiles}\n        </div>\n      </div>\n    )\n  }\n}\n\nSearchContainer.propTypes = {\n  activateSpinner: PropTypes.func,\n  addErrors: PropTypes.func,\n  characters: PropTypes.array,\n  clearError: PropTypes.func,\n  searchBy: PropTypes.object,\n  searchCharacters: PropTypes.func,\n  selectedId: PropTypes.string,\n  setSelectedCharacter: PropTypes.func,\n};\n\nconst mapStateToProps = (state, props) => ({\n  characters: getCharactersByType(state, props),\n  searchBy: state.search.searchBy,\n  selectedId: getSelectedIdByType(state, props),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  activateSpinner: () => dispatch(activateSpinner()),\n  addErrors: (errors) => dispatch(addErrors(errors)),\n  clearError: () => dispatch(clearError()),\n  searchCharacters: (data) => dispatch({ type: actions.SEARCH_CHARACTERS, payload: data }),\n  setSelectedCharacter: (id) => dispatch(setSelectedCharacter(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchContainer)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addErrors, clearError } from '../reducers/errors';\nimport SearchContainer from '../containers/SearchContainer';\nimport ErrorAlert from './ErrorAlert';\nimport '../styles/components/Home.css';\n\nclass Home extends Component {\n  onCompareClick = () => {\n    const { history, selected, addErrors, clearError } = this.props;\n    clearError();\n    if (selected.hero && selected.villain) {\n      history.push('/compare');\n    } else {\n      addErrors(['Please select both hero and a villain.']);\n    }\n  }\n\n  render () {\n    return (\n      <div className='home'>\n        <SearchContainer type='hero' />\n        <SearchContainer type='villain' />\n        <ErrorAlert errors={this.props.errors}/>\n        <button className='compare-button' onClick={this.onCompareClick}>COMPARE</button>\n      </div>\n    )\n  }\n}\n\nHome.propTypes = {\n  history: PropTypes.object,\n  selected: PropTypes.object,\n  addError: PropTypes.func,\n  clearError: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors.messages,\n  selected: state.characters.selected,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addErrors: (errors) => dispatch(addErrors(errors)),\n  clearError: () => dispatch(clearError()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Picture from './Picture';\nimport Info from './Info';\nimport '../styles/components/Character.css';\n\nconst Character = (props) => {\n  const { data } = props;\n  const { name, image, powerstats, biography, appearance } = data;\n  const getInfo = () => {\n    const info = [];\n    [powerstats, appearance].forEach((data, index) => {\n      if (data) {\n        info.push(<Info key={index} data={appearance} className={'character-info'} />);\n      }\n    });\n    return info;\n  };\n  return (\n    <div className='character'>\n      <Picture className='character-picture' url={image.url} />\n      <div className='character-details'>\n        <p>Name: {name}</p>\n        <p>Full Name: {biography['full-name']}</p>\n        {getInfo()}\n      </div>\n    </div>\n  )\n};\n\nCharacter.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default Character","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getCharacterByType } from '../selectors/characters';\nimport Character from '../components/Character';\n\nclass CharacterContainer extends Component {\n  render() {\n    const { character } = this.props;\n    return character ? (\n      <div className={`character-${this.props.type}`}>\n        <Character data={character}/>\n      </div>\n    ) : null;\n  }\n}\n\nCharacterContainer.propTypes = {\n  character: PropTypes.object,\n};\n\nconst mapStateToProps = (state, props) => ({\n  character: getCharacterByType(state, props),\n});\n\nexport default connect(mapStateToProps)(CharacterContainer)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addErrors } from '../reducers/errors';\nimport { clearSelected } from '../reducers/characters';\nimport CharacterContainer from '../containers/CharacterContainer';\nimport '../styles/components/Result.css';\n\nclass Result extends Component {\n  onBackToSearchClick = () => {\n    const { history, clearSelected } = this.props;\n    clearSelected();\n    history.push('/');\n  }\n\n  render () {\n    return (\n      <div className='result'>\n        <div className='title'>RESULT</div>\n        <CharacterContainer type='hero' />\n        <CharacterContainer type='villain' />\n        <button onClick={this.onBackToSearchClick}>BACK TO SEARCH</button>\n      </div>\n    )\n  }\n}\n\nResult.propTypes = {\n  errors: PropTypes.array,\n  addErrors: PropTypes.func,\n  history: PropTypes.object,\n  selected: PropTypes.object,\n  clearSelected: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors.messages,\n  selected: state.characters.selected,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addErrors: (errors) => dispatch(addErrors(errors)),\n  clearSelected: () => dispatch(clearSelected()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Result)\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport PropTypes from 'prop-types';\nimport PrivateRoute from './PrivateRoute';\nimport Login from './Login';\nimport Home from './Home';\nimport Result from './Result';\nimport '../styles/components/App.css';\n\nclass App extends Component {\n  render() {\n    const { isLoading } = this.props;\n    return (\n      <div className='app'>\n        { isLoading && <div className='overlay'><div className='spinner'/></div> }\n        <Switch>\n          <PrivateRoute exact path='/' component={Home}/>\n          <PrivateRoute path='/compare' component={Result} />\n          <Route path='/login' component={Login} />\n          <Redirect path='*' to='/' />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  isLoading: PropTypes.bool,\n};\n\nexport default withRouter(connect(state => ({ isLoading: state.spinner.default }))(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store';\nimport App from './components/App';\nimport './styles/index.css';\nimport './styles/global.css';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>, root);\n"],"sourceRoot":""}